services:
  db:
    image: mariadb:10.6 
    container_name: db_mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 12345678 
      MYSQL_DATABASE: crud_db 
      MYSQL_USER: aquarise 
      MYSQL_PASSWORD: 12345678 
    volumes:
      - mariadb_data:/var/lib/mysql 
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: uts-web-app 
    container_name: web_apache
    restart: unless-stopped
    volumes:
      - ./website:/var/www/html
    ports:
      - "8000:80"
    depends_on:
      - db
    networks:
      - app-network

  # --- LAYANAN MONITORING ---
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime_kuma
    restart: unless-stopped
    volumes:
      - uptime_kuma_data:/app/data
    ports:
      - "3001:3001"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - app-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - app-network

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mariadb_data:
  uptime_kuma_data:
  prometheus_data:
  grafana_data: